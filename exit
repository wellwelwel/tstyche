"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exit = void 0;
const node_process_1 = __importDefault(require("process"));
const poku_js_1 = require("../../configs/poku.js");
const format_js_1 = require("../../services/format.js");
const write_js_1 = require("../../services/write.js");
const files_js_1 = require("../../configs/files.js");
const time_js_1 = require("../../parsers/time.js");
const node_assert_1 = require("assert");
const exit = (code, quiet) => {
    const isPoku = poku_js_1.results.success > 0 || poku_js_1.results.fail > 0;
    const success = ` PASS › ${poku_js_1.results.success - poku_js_1.results.skip || 0} `;
    const failure = ` FAIL › ${poku_js_1.results.fail} `;
    const skips = ` SKIP › ${poku_js_1.results.skip} `;
    const plans = ` TODO › ${poku_js_1.results.todo} `;
    const inline = poku_js_1.results.skip === 0 || poku_js_1.results.todo === 0;
    let message = '';
    if (inline) {
        message += `${(0, format_js_1.format)(success).bg('green')} ${(0, format_js_1.format)(failure).bg(poku_js_1.results.fail === 0 ? 'grey' : 'brightRed')}`;
        if (poku_js_1.results.skip) {
            message += ` ${(0, format_js_1.format)(skips).bg('brightBlue')}`;
        }
        if (poku_js_1.results.todo) {
            message += ` ${(0, format_js_1.format)(plans).bg('brightBlue')}`;
        }
    }
    else {
        message += `${(0, format_js_1.format)(success).success().bold()}\n`;
        message +=
            poku_js_1.results.fail === 0
                ? (0, format_js_1.format)(`${failure}\n`).bold()
                : `${(0, format_js_1.format)(failure).fail().bold()}\n`;
        message += `${(0, format_js_1.format)(skips).info().bold()}\n`;
        message += `${(0, format_js_1.format)(plans).info().bold()}`;
    }
    !quiet &&
        node_process_1.default.on('exit', (code) => {
            if (isPoku) {
                write_js_1.Write.hr();
                write_js_1.Write.log(`    ${(0, format_js_1.format)(`Start at › ${(0, format_js_1.format)(`${(0, time_js_1.parseTime)(files_js_1.finalResults.started)}`).bold()}`).dim()}`);
                write_js_1.Write.log(`    ${(0, format_js_1.format)('Duration ›').dim()} ${(0, format_js_1.format)(`${files_js_1.finalResults.time}ms`).bold().dim()} ${(0, format_js_1.format)(`(±${(0, time_js_1.parseTimeToSecs)(files_js_1.finalResults.time)} seconds)`).dim()}`);
                write_js_1.Write.log(`  ${(0, format_js_1.format)(`Test Files › ${(0, format_js_1.format)(String(files_js_1.fileResults.success.size + files_js_1.fileResults.fail.size)).bold()}`).dim()}`);
                write_js_1.Write.hr();
                write_js_1.Write.log(message);
                write_js_1.Write.hr();
            }
            write_js_1.Write.log(`${(0, format_js_1.format)('Exited with code').dim()} ${(0, format_js_1.format)(String(code)).bold()[code === 0 ? 'success' : 'fail']()}\n`);
        });
    node_process_1.default.exitCode = code === 0 ? 0 : 1;
};
exports.exit = exit;

node_process_1.default.on('unhandledRejection', (err) => {
    if (!(err instanceof node_assert_1.AssertionError)) {
        console.error('unhandledRejection', err);
    }
    node_process_1.default.exitCode = 1;
});
node_process_1.default.on('uncaughtException', (err) => {
    if (!(err instanceof node_assert_1.AssertionError)) {
        console.error('uncaughtException', err);
    }
    node_process_1.default.exitCode = 1;
});

